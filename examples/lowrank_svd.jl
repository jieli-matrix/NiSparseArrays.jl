# # [How to port rules generated by NiSparseArrays to Zygote](@id lowrank_svd)
#
# In this demo we'll show how to insert NiSparseArrays's sparse gradient implementation to boost Zygote's gradient in lowrank svd.
using Zygote
using SparseArrays, LinearAlgebra
using LowRankApprox
using NiSparseArrays:low_rank_svd
using BenchmarkTools

function svd_loss(A, z, r)
    U, S, Vt = low_rank_svd(A, r)
    residual_mat = U * Diagonal(S) * Vt - U * Diagonal(z) * Vt
    return tr(residual_mat'*residual_mat) # square of Frobenius norm
end

function psvd_loss(A, z, r)
    opts = LRAOptions(maxdet_niter=2, rank=r)
    F = psvdfact(Matrix(A), opts);
    residual_mat = F.U * Diagonal(F.S) * F.Vt - F.U * Diagonal(z) * F.Vt
    return tr(residual_mat'*residual_mat) # square of Frobenius norm
end
# generate test data
r = 10
A = sprand(100, r, 0.2) * Diagonal(rand(r)) * sprand(r, 50, 0.2)
z = rand(r)

@btime grad_A, grad_z = Zygote.gradient(svd_loss, $A, $z, $r) # 890.868 Î¼s (550 allocations: 1.67 MiB)
grad_A, grad_z = Zygote.gradient(svd_loss, A, z, r) 

# @btime grad_pA, grad_pz = Zygote.gradient(psvd_loss, $A, $z, $r)
# grad_pA, grad_pz = Zygote.gradient(psvd_loss, A, z, r)






# # [How to port rules generated by NiSparseArrays to Zygote](@id lowrank_svd)
#
# In this demo we'll show how to insert NiSparseArrays's sparse gradient implementation to boost Zygote's gradient in lowrank svd.
using Zygote
using SparseArrays, LinearAlgebra
using NiSparseArrays:low_rank_svd
using BenchmarkTools

function svd_loss(U, S, Vt, z)
    residual_mat = U * Diagonal(S) * Vt - U * Diagonal(z) * Vt
    return tr(residual_mat'*residual_mat) # square of Frobenius norm
end

# generate test data
A = sprand(5000, 500, 0.2) * Diagonal(rand(500)) * sprand(500, 4000, 0.2)
z = rand(500)
U, S, Vt = low_rank_svd(A, 500);

@btime grad_U, grad_S, grad_Vt, grad_z = Zygote.gradient(svd_loss, $U, $S, $Vt, $z)  # 2.449 s (61 allocations: 1.34 GiB)
grad_U, grad_S, grad_Vt, grad_z = Zygote.gradient(svd_loss, U, S, Vt, z) 


using LowRankApprox

opts = LRAOptions(maxdet_niter=2, rank=500)
F = psvdfact(Matrix(A), opts);
@btime grad_FU, grad_FS, grad_FVt, grad_Fz = Zygote.gradient(svd_loss, $F.U, $F.S, $F.Vt, $z) # 2.484 s (61 allocations: 1.34 GiB)
grad_FU, grad_FS, grad_FVt, grad_Fz = Zygote.gradient(svd_loss, F.U, F.S, F.Vt, z)

using Test

@testset begin
    @testset "svd gradient" begin
        @test grad_S ≈ grad_FS
        @test grad_z ≈ grad_Fz
    end
end
